{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","movingCarousel","setMovingCarousel","className","style","transition","width","map","image","index","transform","src","alt","height","type","onClick","Math","max","length","disabled","min","App","state","this","value","onChange","e","setState","target","checked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b43667b9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [movingCarousel, setMovingCarousel] = useState(0);\n\n  const clickInPrev = () => {\n    if (movingCarousel - step > 0) {\n      setMovingCarousel(Math.max(movingCarousel - step, 0));\n    } else {\n      setMovingCarousel(0);\n    }\n\n    if (!movingCarousel && infinite) {\n      setMovingCarousel(images.length - frameSize);\n    }\n  };\n\n  const clickInNext = () => {\n    if (movingCarousel + step < images.length - frameSize) {\n      setMovingCarousel(Math.min(movingCarousel\n        + step, images.length - frameSize));\n    } else {\n      setMovingCarousel(images.length - frameSize);\n    }\n\n    if (movingCarousel === images.length - frameSize && infinite) {\n      setMovingCarousel(0);\n    }\n  };\n\n  return (\n    <>\n      <div\n        className=\"Carousel\"\n      >\n        <ul\n          style={\n            {\n              transition: `${animationDuration}ms`,\n              width: `${frameSize * itemWidth}px`,\n            }\n          }\n          className=\"Carousel__list\"\n        >\n          {\n            images.map((image, index) => (\n              <li\n                key={image}\n                style={\n                  {\n                    transition: `${animationDuration}ms`,\n                    transform: `translateX(${-movingCarousel * itemWidth}px)`,\n                  }\n                }\n              >\n                <img\n                  src={`${image}`}\n                  alt={`${index + 1}`}\n                  width={itemWidth}\n                  height={itemWidth}\n                />\n              </li>\n            ))\n          }\n        </ul>\n\n        <div className=\"Carousel__buttons-container\">\n          <button\n            type=\"button\"\n            className={!movingCarousel && !infinite\n              ? 'button button--prev disabled'\n              : 'button button--prev'}\n            onClick={clickInPrev}\n            disabled={!movingCarousel && !infinite}\n          >\n            Prev\n          </button>\n\n          <button\n            type=\"button\"\n            className={movingCarousel === images.length - frameSize && !infinite\n              ? 'button button--next disabled'\n              : 'button button--next'}\n            onClick={clickInNext}\n            disabled={movingCarousel === images.length - frameSize && !infinite}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    const handleStep = (e: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ step: +e.target.value });\n    };\n\n    const handleFrameSize = (e: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ frameSize: +e.target.value });\n    };\n\n    const handleItemWidth = (e: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ itemWidth: +e.target.value });\n    };\n\n    const handleDuration = (e: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ animationDuration: +e.target.value });\n    };\n\n    const handleInfinte = (e: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ infinite: e.target.checked });\n    };\n\n    return (\n      <div className=\"App\">\n        <h1\n          data-cy=\"title\"\n          className=\"App__title\"\n        >\n          Carousel\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <div className=\"App__inputs-container\">\n          <label>\n            Step:\n            <input\n              type=\"number\"\n              min=\"1\"\n              max=\"10\"\n              value={step}\n              step=\"1\"\n              onChange={handleStep}\n            />\n          </label>\n\n          <label>\n            Frame Size:\n            <input\n              type=\"number\"\n              min=\"1\"\n              max=\"4\"\n              value={frameSize}\n              step=\"1\"\n              onChange={handleFrameSize}\n            />\n          </label>\n\n          <label>\n            Item Width:\n            <input\n              type=\"number\"\n              min=\"100\"\n              max=\"200\"\n              value={itemWidth}\n              step=\"10\"\n              onChange={handleItemWidth}\n            />\n          </label>\n\n          <label>\n            Animation Duration:\n            <input\n              type=\"number\"\n              min=\"100\"\n              max=\"2000\"\n              value={animationDuration}\n              step=\"10\"\n              onChange={handleDuration}\n            />\n          </label>\n\n          <label>\n            Infinity:\n            <input\n              type=\"checkbox\"\n              step=\"10\"\n              onChange={handleInfinte}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}